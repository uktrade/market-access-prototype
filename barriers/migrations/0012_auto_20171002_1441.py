# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-10-02 14:41
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    dependencies = [
        ('barriers', '0011_auto_20170904_1658'),
    ]

    operations = [
        migrations.CreateModel(
            name='BarrierCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100, verbose_name='Country or Territory Name')),
                ('code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Country or Territory Code')),
                ('official_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Offical Country or Territory name')),
                ('govuk_index_entry_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='GOV.UK index code')),
                ('country_or_territory', models.CharField(choices=[('CO', 'Country'), ('TE', 'Territory')], default='CO', max_length=2, verbose_name='Country or Territory flag')),
            ],
            options={
                'verbose_name_plural': 'countries or territories',
            },
        ),
        migrations.CreateModel(
            name='BarrierNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('title', models.TextField(blank=True, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('distribution_date', models.DateField(blank=True, null=True, verbose_name='Distribution Date')),
                ('barrier_symbol', models.CharField(blank=True, max_length=500, verbose_name='Barrier Symbol')),
                ('core_symbol', models.CharField(blank=True, max_length=500, verbose_name='Core Symbol')),
                ('mab_type', models.CharField(blank=True, max_length=500, verbose_name='Barrier type')),
                ('products_text', models.TextField(blank=True, verbose_name='Products')),
                ('product_codes', models.TextField(blank=True, verbose_name='Product codes')),
                ('objectives', models.TextField(blank=True, verbose_name='Objectives')),
                ('keywords', models.TextField(blank=True, verbose_name='Keywords')),
                ('regions_affected', models.TextField(blank=True, verbose_name='Regions affected')),
                ('comments_due_date', models.DateField(blank=True, null=True, verbose_name='Final date for comments')),
                ('notification_type', models.CharField(blank=True, max_length=50, verbose_name='Notification type')),
                ('document_link', models.CharField(blank=True, max_length=1500, verbose_name='Document link')),
                ('external_link', models.CharField(blank=True, max_length=1500, verbose_name='External site link')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BarrierRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active')], default=None, max_length=10, null=True)),
                ('title', models.TextField(blank=True, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('products_text', models.TextField(blank=True, verbose_name='Products affected')),
                ('sectors_text', models.TextField(blank=True, verbose_name='Sectors affected')),
                ('source_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='ID in source system')),
                ('distribution_date', models.DateField(blank=True, null=True, verbose_name='Distribution Date')),
                ('external_link', models.CharField(blank=True, max_length=1500, verbose_name='External site link')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BarrierReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('status', models.CharField(blank=True, choices=[('Draft', 'Draft'), ('Submitted', 'Submitted')], default=None, max_length=10, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('problem_description', models.TextField(blank=True, null=True)),
                ('product_text', models.TextField(blank=True, null=True)),
                ('product_code', models.CharField(blank=True, max_length=500, null=True)),
                ('business_impact_description', models.TextField(blank=True, null=True)),
                ('problem_duration_description', models.TextField(blank=True, null=True)),
                ('other_companies_affected_choice', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('DontKnow', "Don't know")], default=None, max_length=10, null=True)),
                ('other_countries_affected_description', models.TextField(blank=True, null=True)),
                ('steps_taken_to_resolve', models.TextField(blank=True, null=True)),
                ('outcome_looking_for', models.TextField(blank=True, null=True)),
                ('support_desired_choice', models.CharField(blank=True, choices=[('SUPPORT_DESIRED_NONE', 'None - this is for your information only'), ('SUPPORT_DESIRED_LOCAL', 'Local engagement only with UK Government officials in the country I am trying to export to'), ('SUPPORT_DESIRED_BROAD', 'Broader UK Government involvement'), ('SUPPORT_DESIRED_NOT_SURE', 'Not sure')], default=None, max_length=10, null=True)),
                ('confidentiality_issues_description', models.TextField(blank=True, null=True)),
                ('happy_to_publish_choice', models.CharField(blank=True, choices=[('HAPPY_TO_PUBLISH_YES', 'Yes'), ('HAPPY_TO_PUBLISH_NO', 'No'), ('HAPPY_TO_PUBLISH_MAYBE', 'Maybe, following consultation with me')], default=None, max_length=10, null=True)),
                ('any_other_details_description', models.TextField(blank=True, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='barriers.BarrierCountry')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BarrierReporter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=1500, verbose_name='Reporter name')),
                ('company', models.CharField(blank=True, max_length=1500, verbose_name='Company name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BarrierSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('short_name', models.CharField(blank=True, max_length=20, null=True)),
                ('remote_url', models.URLField(blank=True, max_length=20, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BarrierTypeMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('destination_barrier_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destination_barrier_list', to='barriers.BarrierSource')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='marketaccessbarrier',
            name='barrier_types',
        ),
        migrations.RenameField(
            model_name='barriertype',
            old_name='ec_barrier_code',
            new_name='barrier_code',
        ),
        migrations.AlterField(
            model_name='barriertype',
            name='name',
            field=models.CharField(max_length=200),
        ),
        migrations.DeleteModel(
            name='MarketAccessBarrier',
        ),
        migrations.AddField(
            model_name='barriertypemapping',
            name='destination_barrier_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destination_barrier_type', to='barriers.BarrierType'),
        ),
        migrations.AddField(
            model_name='barriertypemapping',
            name='source_barrier_list',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_barrier_list', to='barriers.BarrierSource'),
        ),
        migrations.AddField(
            model_name='barriertypemapping',
            name='source_barrier_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_barrier_type', to='barriers.BarrierType'),
        ),
        migrations.AddField(
            model_name='barrierreport',
            name='reporter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='barriers.BarrierReporter'),
        ),
        migrations.AddField(
            model_name='barrierreport',
            name='top_level_barrier_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='barrier_reports', to='barriers.BarrierType'),
        ),
        migrations.AddField(
            model_name='barrierrecord',
            name='barrier_source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='barriers.BarrierSource'),
        ),
        migrations.AddField(
            model_name='barrierrecord',
            name='barrier_types',
            field=mptt.fields.TreeManyToManyField(blank=True, db_index=True, related_name='types', to='barriers.BarrierType'),
        ),
        migrations.AddField(
            model_name='barrierrecord',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='barriers.BarrierCountry'),
        ),
        migrations.AddField(
            model_name='barriernotification',
            name='barrier_source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='barriers.BarrierSource'),
        ),
        migrations.AddField(
            model_name='barriernotification',
            name='barrier_types',
            field=mptt.fields.TreeManyToManyField(blank=True, db_index=True, related_name='barrier_types', to='barriers.BarrierType'),
        ),
        migrations.AddField(
            model_name='barriernotification',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_countries', to='barriers.BarrierCountry'),
        ),
        migrations.AddField(
            model_name='barriertype',
            name='barrier_source',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='barriers.BarrierSource'),
        ),
    ]
